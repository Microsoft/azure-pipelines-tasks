{
    "id": "BAEC6142-29F9-4BB2-A808-B6432199DB3C",
    "name": "PythonToolInstaller",
    "friendlyName": "Python Tool Installer",
    "description": "Acquires a specific version of Python from Azure storage, the local file system or file share, or URL and adds it to the build agent.",
    "helpMarkDown": "",
    "category": "Tool",
    "runsOn": [
        "Agent",
        "DeploymentGroup"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 0,
        "Minor": 131,
        "Patch": 0
    },
    "preview": true,
    "demands": [],
    "groups": [],
    "instanceNameFormat": "Install Python $(versionSpec)",
    "inputs": [
        {
            "name": "versionSpec",
            "type": "string",
            "label": "Python version",
            "required": true,
            "helpMarkDown": "Human-readable name for the Python version you are installing."
        },
        {
            "name": "architectureOption",
            "type": "pickList",
            "label": "Architecture",
            "options": {
                "x64": "x64",
                "x86": "x86"
            },
            "required": true,
            "helpMarkDown": "The bitness of the Python version."
        },
        {
            "name": "installationSource",
            "type": "pickList",
            "label": "Installation source",
            "required": true,
            "options": {
                "AzureStorage": "Azure storage",
                "FilePath": "File path",
                "Url": "URL"
            },
            "helpMarkDown": "Source for the compressed Python distribution."
        },
        {
            "name": "compressedFile",
            "type": "filePath",
            "label": "Compressed file",
            "required": true,
            "visibleRule": "installationSource == FilePath",
            "helpMarkDown": "Path to a compressed file containing the compiled Python distribution. The path can be in your source repository, a local path on the agent, or a file share accessible by the agent. Supported file types are .tar, .tar.gz / .tgz, .zip, and .7z."
        },
        {
            "name": "azureResourceManagerEndpoint",
            "type": "connectedService:AzureRM",
            "label": "Azure subscription",
            "required": true,
            "visibleRule": "installationSource == AzureStorage",
            "helpMarkDown": "Choose the Azure Resource Manager subscription."
        },
        {
            "name": "azureStorageAccountName",
            "type": "pickList",
            "label": "Storage account name",
            "required": true,
            "properties": {
                "EditableOptions": "True"
            },
            "visibleRule": "installationSource == AzureStorage",
            "helpMarkDown": "Azure Classic and Resource Manager storage accounts are listed. Select the storage account name in which the Python distribution is located."
        },
        {
            "name": "azureContainerName",
            "type": "string",
            "label": "Container name",
            "required": true,
            "visibleRule": "installationSource == AzureStorage",
            "helpMarkDown": "Name of the container in which the Python distribution is located."
        },
        {
            "name": "azureCommonVirtualFile",
            "type": "string",
            "label": "Common virtual path",
            "required": true,
            "visibleRule": "installationSource == AzureStorage",
            "helpMarkDown": "Path to the Python distribution inside the Azure storage container."
        },
        {
            "name": "url",
            "type": "string",
            "label": "URL",
            "required": true,
            "visibleRule": "installationSource == Url",
            "helpMarkDown": "URL pointing to the compressed Python distribution for download. Supported file types are .tar, .tar.gz / .tgz, .zip, and .7z."
        },
        {
            "name": "destinationDirectory",
            "type": "filePath",
            "label": "Destination directory",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Destination directory into which the Python distribution should be extracted."
        },
        {
            "name": "cleanDestinationDirectory",
            "type": "boolean",
            "label": "Clean destination directory",
            "required": true,
            "defaultValue": "true",
            "helpMarkDown": "Select this option to clean the destination directory before the Python distribution is extracted into it."
        },
        {
            "name": "outputVariable",
            "type": "string",
            "label": "Output variable",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "Set a name for the build variable that will contain the directory of the decompressed Python distribution. You can use this in subsequent tasks to access your installation of Python."
        }
    ],
    "dataSourceBindings": [
        {
            "endpointId": "$(ConnectedServiceNameARM)",
            "target": "storageAccountName",
            "dataSourceName": "AzureStorageAccountRMandClassic"
        }
    ],
    "execution": {
        "Node": {
            "target": "pythontoolinstaller.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "CleanDestDir": "Cleaning destination folder before extraction: %s",
        "DownloadFromAzureBlobStorage": "Downloading artifacts from Azure Blob Storage, Container Name: %s",
        "InstallationSourceUnknown": "Unknown installation source %s",
        "RetrievingPythonFromAzure": "Retrieving Python %s (%s) from Azure blob storage.",
        "RetrievingPythonFromFilePath": "Retrieving Python %s (%s) from file path.",
        "RetrievingPythonFromUrl": "Retrieving Python %s (%s) from URL",
        "StorageAccountDoesNotExist": "Failed to get azure storage account with name %s.",
        "SucceedMsg": "Successfully extracted all files.",
        "SuccessFullyFetchedItemList": "Successfully fetched list of items",
        "UrlNoFile": "Could not determine the file type of the file at the download URL %s",
        "UrlNoHost": "Could not parse a host from the download URL %s",
        "UrlNoProtocol": "The download URL %s does not have a protocol"
    }
}