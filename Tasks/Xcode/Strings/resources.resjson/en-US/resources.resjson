{
  "loc.friendlyName": "Xcode",
  "loc.helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613730)",
  "loc.description": "Build, test or archive an Xcode workspace on macOS. Optionally package an app.",
  "loc.instanceNameFormat": "Xcode $(actions)",
  "loc.group.displayName.sign": "Signing & Provisioning",
  "loc.group.displayName.package": "Package Options",
  "loc.group.displayName.advanced": "Advanced",
  "loc.input.label.actions": "Actions",
  "loc.input.help.actions": "Space delimited list of actions.  Valid options are build, clean, test, analyze, and archive.  For example: `clean build` would do a clean build.  See [xcodebuild man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/xcodebuild.1.html)",
  "loc.input.label.configuration": "Configuration",
  "loc.input.label.sdk": "SDK",
  "loc.input.help.sdk": "Build an Xcode project or workspace against the specified SDK.  Run *xcodebuild -showsdks* to see the valid list of SDKs.",
  "loc.input.label.xcWorkspacePath": "Workspace/Project Path",
  "loc.input.help.xcWorkspacePath": "Optional relative path from repo root to the Xcode workspace or project. For example: `MyApp/MyApp.xcworkspace` or `MyApp/MyApp.xcworkspace/MyApp.xcodeproj`. Leave blank if you intend to use the -target flag under Advanced Arguments.",
  "loc.input.label.scheme": "Scheme",
  "loc.input.help.scheme": "Optional scheme name in Xcode. *Must be a shared scheme* (shared checkbox under managed schemes in Xcode). **Required if Workspace is specified.**",
  "loc.input.label.xcodeVersion": "Xcode version",
  "loc.input.help.xcodeVersion": "The target version of Xcode. Version numbers (e.g. `Xcode 9`) rely on environment variables set on the agent machine (e.g. `XCODE_9_DEVELOPER_DIR=/Applications/Xcode_9.0.0.app/Contents/Developer`).",
  "loc.input.label.xcodeDeveloperDir": "Xcode Developer Path",
  "loc.input.help.xcodeDeveloperDir": "Optional path to Xcode Developer folder if not the system default. For use when multiple versions of Xcode are installed on a system. Ex: /Applications/Xcode 7.app/Contents/Developer",
  "loc.input.label.packageApp": "Create App Package",
  "loc.input.help.packageApp": "Indicates whether an IPA should be generated as a part of the build. Review additional inputs in the `Package Options` section.",
  "loc.input.label.archivePath": "Archive Path",
  "loc.input.help.archivePath": "Optionally specify a directory where created archives should be placed.",
  "loc.input.label.exportPath": "Export Path",
  "loc.input.help.exportPath": "Optionally specify the destination for the product exported from the archive.",
  "loc.input.label.exportOptions": "Export Options",
  "loc.input.help.exportOptions": "Pick a way to pass in Export Options when exporting the archive.",
  "loc.input.label.exportMethod": "Export Method",
  "loc.input.help.exportMethod": "Method for how Xcode should export the archive. E.g. app-store, package, ad-hoc, enterprise, development.",
  "loc.input.label.exportTeamId": "Team ID",
  "loc.input.help.exportTeamId": "The 10 digit Team ID from the Apple Developer Portal to use for this export.",
  "loc.input.label.exportOptionsPlist": "Export Options Plist",
  "loc.input.help.exportOptionsPlist": "Path to a plist file that configures archive exporting.",
  "loc.input.label.exportArgs": "Export Arguments",
  "loc.input.help.exportArgs": "Additional command line arguments that should be used to export.",
  "loc.input.label.signStyle": "Signing style",
  "loc.input.help.signStyle": "The signing style. Use `Do not code sign` to disable signing. Use `Project defaults` to use the project's signing configuration only. Use `Manual signing` to force manual signing and optionally specify a signing identity and provisioning profile. Use `Automatic signing` to force automatic signing and optionally specify a development Team Id. If your project requires signing, use the \"Install Apple...\" tasks to install certificates and provisioning profiles prior to build.",
  "loc.input.label.signingIdentity": "Signing Identity",
  "loc.input.help.signingIdentity": "Optional signing identity override that should be used to sign the build. Defaults to Xcode Project setting. You may need to unlock the default keychain if you use this option.",
  "loc.input.label.provProfileUuid": "Provisioning Profile UUID",
  "loc.input.help.provProfileUuid": "Optional UUID of an installed provisioning profile to be used for this build. Use separate build tasks with different Schemes or Targets to specify separate provisioning profiles by target in a single workspace (iOS, WatchKit, tvOS).",
  "loc.input.label.teamId": "Team ID",
  "loc.input.help.teamId": "Specify the 10 digit development Team ID. This is required if you are a member of multiple development teams.",
  "loc.input.label.args": "Arguments",
  "loc.input.help.args": "Additional command line arguments that should be used to build. Useful if you want to use -target or -project instead of specifying a Workspace and Scheme.",
  "loc.input.label.cwd": "Working Directory",
  "loc.input.help.cwd": "Working directory for build runs. Defaults to the root of the repository.",
  "loc.input.label.outputPattern": "Output Directory",
  "loc.input.help.outputPattern": "Relative path where build output (binaries) will be placed.",
  "loc.input.label.useXcpretty": "Use xcpretty",
  "loc.input.help.useXcpretty": "Use xcpretty to format xcodebuild output and generate JUnit test results report. Requires xcpretty be installed on agent hosts. See [xcpretty](https://github.com/supermarin/xcpretty) for details.",
  "loc.input.label.publishJUnitResults": "Publish to VSTS/TFS",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit Test results to VSTS/TFS.",
  "loc.messages.SignIdNotFound": "Failed to find iOS signing identity. Verify the signing and provisioning information provided.",
  "loc.messages.TempKeychainSetupFailed": "Failed to add the temporary keychain to the keychains search path.",
  "loc.messages.ProvProfileDetailsNotFound": "Failed to find the details for provisioning profile: %s",
  "loc.messages.ProvProfileUUIDNotFound": "Failed to find provisioning profile UUID for provisioning profile: %s",
  "loc.messages.MultipleWorkspacesFound": "Multiple xcode workspace matches were found. Using the first match: %s",
  "loc.messages.WorkspaceDoesNotExist": "Xcode workspace was specified but it does not exist or is not a directory: %s",
  "loc.messages.UseXcprettyForTestPublishing": "When using xcodebuild, check 'Use xcpretty' to publish test results. No results will be published.",
  "loc.messages.NoTestResultsFound": "No test result files matching %s were found, so publishing JUnit test results is being skipped.",
  "loc.messages.XcodeSuccess": "Xcode task execution completed with no errors.",
  "loc.messages.TempKeychainDeleteFailed": "Failed to delete temporary keychain %s created during the build.",
  "loc.messages.ProvProfileDeleteFailed": "Failed to delete the provisioning profile %s.",
  "loc.messages.ExportMethodNotIdentified": "Failed to identify the export method to use automatically from the archive file. This might cause errors during build or produce an invalid package. Set `Export Options` to `Specify` or `Plist`.",
  "loc.messages.ExportOptionsPlistInvalidFilePath": "Export Options Plist file does not exist at %s. Provide the path to a valid Plist file.",
  "loc.messages.SchemeRequiredForArchive": "Scheme needs to be specified to generate the package with xcodebuild archive and export.",
  "loc.messages.WorkspaceOrProjectRequiredForArchive": "Workspace or Project path needs to be specified to generate the package with xcodebuild archive and export.",
  "loc.messages.FailedToGenerateExportOptionsPlist": "Failed to automatically generate an Export Options Plist to export an IPA. Please specify an Export Options Plist in the Package Options.",
  "loc.messages.LocateXcodeBasedOnVersion": "Locate the developer path for Xcode %s",
  "loc.messages.FailedToLocateSpecifiedXcode": "Unable to resolve the developer path for Xcode %s. Set the %s environment variable on the agent machine, or set `Xcode version` to `Default` or `Custom`.",
  "loc.messages.CantDetermineProvisioningStyle": "Provisioning style not found in a pbxProject file. Defaulting to automatic signing. If the project uses manual signing, auto export may fail. `Export Options` can be set to `Specify` or `Plist` as a workaround."
}