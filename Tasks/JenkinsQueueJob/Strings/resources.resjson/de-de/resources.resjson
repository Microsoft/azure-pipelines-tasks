{
  "loc.friendlyName": "Jenkins-Warteschlangenauftrag",
  "loc.helpMarkDown": "Dieser Schritt reiht einen Auftrag auf einem [Jenkins](https://jenkins.io/)-Server in die Warteschlange ein. Für vollständige Integrationsfunktionen ist die Installation des [Team Foundation Server Plug-Ins](https://wiki.jenkins-ci.org/display/JENKINS/Team+Foundation+Server+Plugin) für Jenkins erforderlich. [Weitere Informationen](http://go.microsoft.com/fwlink/?LinkId=816956).",
  "loc.description": "Reiht einen Auftrag auf einem Jenkins-Server in die Warteschlange ein.",
  "loc.instanceNameFormat": "Warteschlange Jenkins-Auftrag: $(jobName)",
  "loc.group.displayName.advanced": "Erweitert",
  "loc.input.label.serverEndpoint": "Endpunkt des Jenkins-Diensts",
  "loc.input.help.serverEndpoint": "Select the service endpoint for your Jenkins instance.  To create one, click the Manage link and create a new Jenkins service endpoint.",
  "loc.input.label.jobName": "Auftragsname",
  "loc.input.help.jobName": "Der Name des Jenkins-Auftrags, der in die Warteschlange eingereiht werden soll. Dieser Name muss genau mit dem Auftragsnamen auf dem Jenkins-Server übereinstimmen.",
  "loc.input.label.captureConsole": "Konsolenausgabe erfassen und auf den Abschluss warten",
  "loc.input.help.captureConsole": "Wenn ausgewählt, wird in diesem Schritt die Konsolenausgabe des Jenkins-Builds erfasst, auf den Abschluss des Jenkins-Builds gewartet und dann auf der Grundlage des Ergebnisses des Jenkins-Builds Erfolg bzw. ein Fehler gemeldet. Andernfalls wird dieser Schritt nach dem erfolgreichen Einreihen des Jenkins-Auftrags in die Warteschlange erfolgreich abgeschlossen, ohne auf die Ausführung des Jenkins-Builds zu warten.",
  "loc.input.label.capturePipeline": "Pipelineausgabe erfassen und auf den Abschluss der Pipeline warten",
  "loc.input.help.capturePipeline": "If selected, this step will capture the full Jenkins build pipeline console output, wait for the full Jenkins build pipeline to complete, and succeed/fail based on the Jenkins build pipeline result.  Otherwise, once the first Jenkins job completes, this step will successfully complete without waiting for full Jenkins build pipeline to run.",
  "loc.input.label.parameterizedJob": "Parametrisierter Auftrag",
  "loc.input.help.parameterizedJob": "Select if the Jenkins job accepts parameters. This should be selected even if all default parameter values are used and no parameters are actually specified.",
  "loc.input.label.jobParameters": "Auftragsparameter",
  "loc.input.help.jobParameters": "Specify job parameters, one per line, in the form <b>`<parameterName>=<parameterValue>`</b><p>To set a parameter to an empty value (useful for overriding a default value), leave off the parameter value. For example, specify <b>`<parameterName>=`</b><p>Variables are supported. For example, to set a <b>`commitId`</b> parameter value to the Git commit ID of the build, use: <b>`commitId=$(Build.SourceVersion)`</b>. See the [documentation on variables](https://www.visualstudio.com/docs/build/define/variables) for more details.<p>Supported Jenkins parameter types are: <ul><li>`Boolean`</li><li>`Choice`</li><li>`Password`</li><li>`String`</li></ul>"
}