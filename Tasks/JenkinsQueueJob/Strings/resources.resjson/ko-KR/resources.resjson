{
  "loc.friendlyName": "Jenkins 작업을 큐에 넣기",
  "loc.helpMarkDown": "이 단계에서는 작업을 [Jenkins](https://jenkins.io/) 서버의 큐에 넣습니다. 전체 통합 기능을 사용하려면 Jenkins에 [Team Foundation Server 플러그 인](https://wiki.jenkins-ci.org/display/JENKINS/Team+Foundation+Server+Plugin)을 설치해야 합니다. [자세한 정보](http://go.microsoft.com/fwlink/?LinkId=816956).",
  "loc.description": "작업을 Jenkins 서버의 큐에 넣기",
  "loc.instanceNameFormat": "Jenkins 작업을 큐에 넣기: $(jobName)",
  "loc.group.displayName.advanced": "고급",
  "loc.input.label.serverEndpoint": "Jenkins 서비스 끝점",
  "loc.input.help.serverEndpoint": "Select the service endpoint for your Jenkins instance.  To create one, click the Manage link and create a new Jenkins service endpoint.",
  "loc.input.label.jobName": "작업 이름",
  "loc.input.help.jobName": "큐에 넣을 Jenkins 작업의 이름입니다. 이 이름은 Jenkins 서버에 있는 작업 이름과 정확히 일치해야 합니다.",
  "loc.input.label.captureConsole": "콘솔 출력을 캡처하고 완료되기를 기다립니다.",
  "loc.input.help.captureConsole": "선택하면 이 단계에서는 Jenkins 빌드 콘솔 출력을 캡처하고 Jenkins 빌드가 완료되기를 기다린 다음 Jenkins 빌드 결과를 기반으로 성공/실패합니다. 선택하지 않으면 Jenkins 작업을 큐에 넣은 후 Jenkins 빌드가 실행되기를 기다리지 않고 이 단계가 완료됩니다.",
  "loc.input.label.capturePipeline": "파이프라인 출력을 캡처하고 파이프라인이 완료되기를 기다립니다.",
  "loc.input.help.capturePipeline": "If selected, this step will capture the full Jenkins build pipeline console output, wait for the full Jenkins build pipeline to complete, and succeed/fail based on the Jenkins build pipeline result.  Otherwise, once the first Jenkins job completes, this step will successfully complete without waiting for full Jenkins build pipeline to run.",
  "loc.input.label.parameterizedJob": "매개 변수가 있는 작업",
  "loc.input.help.parameterizedJob": "Select if the Jenkins job accepts parameters. This should be selected even if all default parameter values are used and no parameters are actually specified.",
  "loc.input.label.jobParameters": "작업 매개 변수",
  "loc.input.help.jobParameters": "Specify job parameters, one per line, in the form <b>`<parameterName>=<parameterValue>`</b><p>To set a parameter to an empty value (useful for overriding a default value), leave off the parameter value. For example, specify <b>`<parameterName>=`</b><p>Variables are supported. For example, to set a <b>`commitId`</b> parameter value to the Git commit ID of the build, use: <b>`commitId=$(Build.SourceVersion)`</b>. See the [documentation on variables](https://www.visualstudio.com/docs/build/define/variables) for more details.<p>Supported Jenkins parameter types are: <ul><li>`Boolean`</li><li>`Choice`</li><li>`Password`</li><li>`String`</li></ul>"
}