{
  "loc.friendlyName": "Jenkins 队列作业",
  "loc.helpMarkDown": "此步骤在 [Jenkins](https://jenkins.io/) 服务器上排列作业。完全集成功能要求在 Jenkins 上安装 [Team Foundation Server Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Team+Foundation+Server+Plugin)。[详细信息](http://go.microsoft.com/fwlink/?LinkId=816956)。",
  "loc.description": "在 Jenkins 服务器上排列作业",
  "loc.instanceNameFormat": "排列 Jenkins 作业: $(jobName)",
  "loc.group.displayName.advanced": "高级",
  "loc.input.label.serverEndpoint": "Jenkins 服务终结点",
  "loc.input.help.serverEndpoint": "Select the service endpoint for your Jenkins instance.  To create one, click the Manage link and create a new Jenkins service endpoint.",
  "loc.input.label.jobName": "作业名称",
  "loc.input.help.jobName": "要从排队的 Jenkins 作业的名称。此名称必须与 Jenkins 服务器上的作业名称完全匹配。",
  "loc.input.label.captureConsole": "获取控制台输出并等待完成",
  "loc.input.help.captureConsole": "如果选中，此步骤将捕获 Jenkins 生成控制台输出，等待 Jenkins 生成完成，并根据 Jenkins 生成结果而成功/失败。 否则，一旦 Jenkins 作业成功排队，此步骤将成功完成而不等待 Jenkins 生成运行。",
  "loc.input.label.capturePipeline": "获取管道输出并等待管道完成",
  "loc.input.help.capturePipeline": "If selected, this step will capture the full Jenkins build pipeline console output, wait for the full Jenkins build pipeline to complete, and succeed/fail based on the Jenkins build pipeline result.  Otherwise, once the first Jenkins job completes, this step will successfully complete without waiting for full Jenkins build pipeline to run.",
  "loc.input.label.parameterizedJob": "参数化的作业",
  "loc.input.help.parameterizedJob": "Select if the Jenkins job accepts parameters. This should be selected even if all default parameter values are used and no parameters are actually specified.",
  "loc.input.label.jobParameters": "作业参数",
  "loc.input.help.jobParameters": "Specify job parameters, one per line, in the form <b>`<parameterName>=<parameterValue>`</b><p>To set a parameter to an empty value (useful for overriding a default value), leave off the parameter value. For example, specify <b>`<parameterName>=`</b><p>Variables are supported. For example, to set a <b>`commitId`</b> parameter value to the Git commit ID of the build, use: <b>`commitId=$(Build.SourceVersion)`</b>. See the [documentation on variables](https://www.visualstudio.com/docs/build/define/variables) for more details.<p>Supported Jenkins parameter types are: <ul><li>`Boolean`</li><li>`Choice`</li><li>`Password`</li><li>`String`</li></ul>"
}