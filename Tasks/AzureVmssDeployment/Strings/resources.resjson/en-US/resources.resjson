{
  "loc.friendlyName": "Azure VM scale set Deployment (PREVIEW)",
  "loc.helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?linkid=852117)",
  "loc.description": "Deploy Virtual Machine scale set image",
  "loc.instanceNameFormat": "Azure VMSS $(vmssName): $(action)",
  "loc.releaseNotes": "- Updates Azure Virtual Machine scale set with a custom machine image.",
  "loc.group.displayName.AzureDetails": "Azure Details",
  "loc.group.displayName.Image": "Image Details",
  "loc.group.displayName.StartupConfiguration": "Configure start-up",
  "loc.group.displayName.Advanced": "Advanced",
  "loc.input.label.ConnectedServiceName": "Azure subscription",
  "loc.input.help.ConnectedServiceName": "Select the Azure Resource Manager subscription for the scale set.",
  "loc.input.label.action": "Action",
  "loc.input.help.action": "Action to be performed on the scale set.",
  "loc.input.label.vmssName": "Virtual Machine scale set name",
  "loc.input.help.vmssName": "Provide the name of scale set. Note that image can be updated only for a scale set which is running a custom image. If a scale set is using platform/gallery image, then image update operation will fail.",
  "loc.input.label.imageUrl": "Image url",
  "loc.input.help.imageUrl": "Specify the URL of image VHD. If it is an Azure storage blob url, the storage account location should be same as scale set location.",
  "loc.input.label.customScriptsDirectory": "Custom script directory",
  "loc.input.help.customScriptsDirectory": "Path to directory containing custom script and related scripts. These scripts can be used to set start-up environment for application(if any) being deployed through custom image. In other words, application configuration management can be achieved using this script.<br/>E.g. the script can set a machine level environment variable and the application can then consume envionment variable. This enables usage of same VHD image across multiple deployments.",
  "loc.input.label.customScript": "Command",
  "loc.input.help.customScript": "Script to be executed. This scripts can invoke other scripts in current directory. On Azure VM this script will be invoked with arguments passed in next input. Example usages:<br/>1. Update-DatabaseConnectionStrings.ps1 -clusterType dev -user $(dbUser) -password $(dbUserPwd) will update connection string in web.config of web application.<br/>2. install-secrets.sh --key-vault-type prod -key serviceprincipalkey will create an encrypted file containing service principal key.",
  "loc.input.label.customScriptArguments": "Arguments",
  "loc.input.help.customScriptArguments": "Arguments for custom script. Release variables can be used which makes it easy to use secrets.",
  "loc.input.label.customScriptsStorageAccount": "Azure storage account where custom scripts will be uploaded.",
  "loc.input.help.customScriptsStorageAccount": "Specify a pre-existing ARM storage account. It is used as an storage of custom scripts. Whenever vm extension is run(for example during VMSS scale-up), custom scripts will be downloaded from this storage.",
  "loc.input.label.skipArchivingCustomScripts": "Skip Archiving custom scripts",
  "loc.input.help.skipArchivingCustomScripts": "By default, this task creates a compressed archive of directory containing custom scripts. This improves performance and reliability while uploading to azure storage. If unset, archiving will not be done and all files will be inidividually uploaded.",
  "loc.messages.InvalidAction": "This action is not defined. Check with the task author.",
  "loc.messages.TaskNotFound": "Task.json file could not be found: %s",
  "loc.messages.TaskConstructorFailed": "Task failed while initializing. Error: %s",
  "loc.messages.InvalidValue": "%s is not a valid value. The valid values are: %s",
  "loc.messages.VMSSListFetchFailed": "Failed to fetch VMSS details. Error: %s",
  "loc.messages.NoVMSSFound": "No VMSS found with name %s.",
  "loc.messages.FailedToGetRGForVMSS": "Failed to get resource group information for VMSS %s.",
  "loc.messages.VMSSImageUpdateFailed": "Failed to update image for VMSS %s. Error: %s",
  "loc.messages.UpdatedVMSSImage": "Successfully updated VMSS image.",
  "loc.messages.GetVMSSExtensionsListFailed": "Failed to fetch list of VM extensions for VMSS %s. Error: %s.",
  "loc.messages.CustomScriptExtensionRemoved": "Custom script extension %s removed successfully.",
  "loc.messages.CustomScriptExtensionInstalled": "Custom script extension %s installed successfully.",
  "loc.messages.RemovingCustomScriptExtension": "VMSS already has an custom script extension %s. This will be removed first.",
  "loc.messages.RemoveVMSSExtensionsFailed": "Failed to remove VM extension %s. Error: %s.",
  "loc.messages.SettingVMExtensionFailed": "Failed to install VM custom script extension on VMSS. Error: %s.",
  "loc.messages.VMSSNameCannotBeNull": "VMSS name cannot be null or undefined and it must be of type string.",
  "loc.messages.GetVMSSFailed": "Failed to get VMSS details with resource group %s and name %s. Error: %s",
  "loc.messages.VMSSDoesNotHaveCustomImage": "VMSS %s can not be updated as it uses a platform image. Only a VMSS which is currently using a custom image can be updated.",
  "loc.messages.VMSSImageUrlCannotBeNull": "Image url must be a non empty string.",
  "loc.messages.VMSSImageAlreadyUptoDate": "Image is already up-to-date for %s. Skipping image update.",
  "loc.messages.NewVMSSImageUrl": "Url for new VMSS image: %s.",
  "loc.messages.VMSSUpdateImage": "Updating VMSS %s to use new image...",
  "loc.messages.ResourceNameCannotBeNull": "Resource name cannot be null.",
  "loc.messages.ArchivingCustomScripts": "Creating compressed archive of custom scripts directory %s.",
  "loc.messages.SkippedArchivingCustomScripts": "Skipped archiving custom scripts directory",
  "loc.messages.CustomScriptsArchiveFile": "Custom scripts archive created at %s.",
  "loc.messages.CopiedInvokerScript": "Script to extract and execute custom srcipt srchive has been copied to %s.",
  "loc.messages.CustomScriptsArchivingFailed": "Cound not compress custom scripts. Will use individual files.",
  "loc.messages.UploadingCustomScriptsBlobs": "Uploading custom scripts from %s to azure blobs.",
  "loc.messages.UploadingToStorageBlobsFailed": "Failed to upload custom scripts to azure blob storage. Error: %s.",
  "loc.messages.DestinationBlobContainer": "Files will be uploaded to container url: %s.",
  "loc.messages.StorageAccountDoesNotExist": "Failed to get azure storage account with name %s.",
  "loc.messages.activeDirectoryResourceIdUrlCannotBeEmpty": "Active directory resource url cannot be empty.",
  "loc.messages.StorageAccountCannotBeNull": "storage accountName cannot be null or undefined and it must be of type string.",
  "loc.messages.ArtifactItemsTruncationWarning": "Downloaded items may be trucated at 5000 items, all artifact items might not have been downloaded.",
  "loc.messages.CreatedBlobForItem": "Created blob for item {0}. Blob uri: {1}",
  "loc.messages.CreatedContainer": "Created container {0}.",
  "loc.messages.ErrorInReadStream": "Error in Read stream: {0}",
  "loc.messages.ErrorInWriteStream": "Error in write stream: {0}",
  "loc.messages.FailedToCreateBlob": "Failed to create blob {0}. Error: {1}",
  "loc.messages.FailedToCreateContainer": "Failed to create container {0}. Error: {1}",
  "loc.messages.FailedToListItemInsideContainer": "Failed to list items inside container: {0}. Error: {1}",
  "loc.messages.SuccessFullyFetchedItemList": "Successfully fetcted list of items",
  "loc.messages.UnableToFetchItem": "Unable to fetch item: {0}. Error: {1}",
  "loc.messages.UploadingItem": "Uploading {0}."
}