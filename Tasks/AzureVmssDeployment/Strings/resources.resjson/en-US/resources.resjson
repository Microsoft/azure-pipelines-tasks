{
  "loc.friendlyName": "Azure VM scale set Deployment (PREVIEW)",
  "loc.helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?linkid=852117)",
  "loc.description": "Deploy Virtual Machine scale set image",
  "loc.instanceNameFormat": "Azure VMSS $(vmssName): $(action)",
  "loc.releaseNotes": "- Updates Azure Virtual Machine scale set with a custom machine image.",
  "loc.group.displayName.AzureDetails": "Azure Details",
  "loc.group.displayName.Image": "Image Details",
  "loc.group.displayName.StartupConfiguration": "Configure start-up",
  "loc.input.label.ConnectedServiceName": "Azure subscription",
  "loc.input.help.ConnectedServiceName": "Select the Azure Resource Manager subscription for the scale set.",
  "loc.input.label.action": "Action",
  "loc.input.help.action": "Action to be performed on the scale set.",
  "loc.input.label.vmssName": "Virtual Machine scale set name",
  "loc.input.help.vmssName": "Provide the name of scale set. Note that image can be updated only for a scale set which is running a custom image. If a scale set is using platform/gallery image, then image update operation will fail.",
  "loc.input.label.imageUrl": "Image url",
  "loc.input.help.imageUrl": "Specify the URL of image VHD. If it is an Azure storage blob url, the storage account location should be same as scale set location.",
  "loc.input.label.customScriptUrl": "Custom script url",
  "loc.input.help.customScriptUrl": "Specify the URL of the script to run using custom script VM extension. This should be a publically accessible url. This script can be used to set start-up environment for application(if any) being deployed through custom image. In other words, application configuration management can be achieved using this script.<br/>E.g. the script can set a machine level environment variable and the application can then consume envionment variable. This enables usage of same VHD image across multiple deployments.",
  "loc.input.label.customScriptCommand": "Command",
  "loc.input.help.customScriptCommand": "Command to be run to execute custom script. Arguments can also be provided in command. Release variables can be used which makes it easy to use pass secrets.<br/>For powershell script, use something like \"powershell .\\&lt;script-name&gt;.ps1 &lt;arguments&gt;\". For shell script use something like \"bash ./&lt;script-name&gt;.sh &lt;arguments&gt;\",  Example usages:<br/>1. \".\\SetEnv.cmd\" will set some environment variabels which will be used by application when starting.<br/>2. \"powershell .\\Update-DatabaseConnectionStrings.ps1 -clusterType dev -user $(dbUser) -password $(dbUserPwd)\" will update connection string in web.config of web application.<br/>3. \"bash ./install-secrets.sh --key-vault-type prod -key serviceprincipalkey\" will create an encrypted file containing service principal key.",
  "loc.messages.InvalidAction": "This action is not defined. Check with the task author.",
  "loc.messages.TaskNotFound": "Task.json file could not be found: %s",
  "loc.messages.TaskConstructorFailed": "Task failed while initializing. Error: %s",
  "loc.messages.InvalidValue": "%s is not a valid value. The valid values are: %s",
  "loc.messages.VMSSListFetchFailed": "Failed to fetch VMSS details.",
  "loc.messages.NoVMSSFound": "No VMSS found with name %s.",
  "loc.messages.FailedToGetRGForVMSS": "Failed to get resource group information for VMSS %s.",
  "loc.messages.VMSSImageUpdateFailed": "Failed to update image for VMSS %s. Error: %s",
  "loc.messages.UpdatedVMSSImage": "Successfully updated VMSS image.",
  "loc.messages.VMSSUpdateImage": "Updating VMSS %s image to %s",
  "loc.messages.VMSSNameCannotBeNull": "VMSS name cannot be null or undefined and it must be of type string.",
  "loc.messages.GetVMSSFailedWillRetry": "Failed to get VMSS details with resource group %s and name %s. Error: %s. Will retry.",
  "loc.messages.GetVMSSFailed": "Failed to get VMSS details with resource group %s and name %s. Error: %s",
  "loc.messages.WaitingForVMSSImageUpdateCompletion": "Waiting for VMSS image to get updated..",
  "loc.messages.VMSSImageUpdateTimedOut": "Timed out waiting for VMSS image update to complete.",
  "loc.messages.VMSSDoesNotHaveCustomImage": "VMSS %s can not be updated as it uses a platform image. Only a VMSS which is currently using a custom image can be updated.",
  "loc.messages.VMSSImageUrlCannotBeNull": "Image url must be a non empty string.",
  "loc.messages.VMSSImageAlreadyUptoDate": "VMSS image is already up-to-date.",
  "loc.messages.GetVMSSExtensionsListFailed": "Failed to fetch list of VM extensions for VMSS %s. Error: %s.",
  "loc.messages.CustomScriptExtensionRemoved": "Custom script extension %s removed successfully.",
  "loc.messages.CustomScriptExtensionInstalled": "Custom script extension %s installed successfully.",
  "loc.messages.RemovingCustomScriptExtension": "VMSS already has an custom script extension %s. This will be removed first.",
  "loc.messages.RemoveVMSSExtensionsFailed": "Failed to remove extension %s. Error: %s.",
  "loc.messages.SettingVMExtensionFailed": "Failed to install VM custom script extension on VMSS. Error:%s.",
  "loc.messages.ResourceNameCannotBeNull": "Resource name cannot be null."
}