{
    "id": "7B5A6198-ADF8-4B16-9939-7ADDF85708B2",
    "name": "GithubRelease",
    "friendlyName": "Github Release",
    "description": "Create, edit or discard the github release",
    "helpMarkDown": "[More Information](Todo: mdakbar: Link to github release documentation)",
    "category": "Utility",
    "releaseNotes": "Works with cross-platform agents (Linux, macOS, or Windows)",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Microsoft Corporation",
    "preview": true,
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 0
    },
    "demands": [],
    "minimumAgentVersion": "2.0.0",
    "inputs": [
        {
            "name": "githubEndpoint",
            "type": "connectedService:github",
            "label": "GitHub Connection",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the service endpoint for your GitHub connection. To create one, click the Manage link and create a new service endpoint."
        },
        {
            "name": "repositoryName",
            "type": "pickList",
            "label": "Repository",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Name of the GitHub repository",
            "properties": {
                "DisableManageLink": "True"
            }
        },
        {
            "name": "action",
            "type": "pickList",
            "label": "Action",
            "defaultValue": "Create",
            "required": true,
            "helpMarkDown": "Select the action to trigger",
            "options": {
                "Create": "Create",
                "Edit": "Edit",
                "Discard": "Discard"
            }
        },
        {
            "name": "target",
            "type": "string",
            "label": "Target",
            "defaultValue": "$(Build.SourceVersion)",
            "required": true,
            "visibleRule": "action = Create || action = Edit",
            "helpMarkDown": "The branch or commit to release"
        },
        {
            "name": "tagSelection",
            "type": "radio",
            "label": "Tag selection",
            "required": true,
            "defaultValue": "auto",
            "visibleRule": "action = Create",
            "options": {
                "auto": "Use tag associated with commit",
                "manual": "Specify tag manually"
            }
        },
        {
            "name": "tag",
            "type": "string",
            "label": "Tag",
            "defaultValue": "",
            "required": true,
            "visibleRule": "action = Edit || action = Discard || tagSelection = manual",
            "helpMarkDown": "Tag to release, default value $(Build.BuildNumber) for release current build"
        },
        {
            "name": "releaseTitle",
            "type": "string",
            "label": "Release title",
            "defaultValue": "",
            "required": false,
            "visibleRule": "action = Create || action = Edit",
            "helpMarkDown": "Release title"
        },
        {
            "name": "releaseNotesSelection",
            "type": "radio",
            "label": "Release note",
            "required": false,
            "defaultValue": "file",
            "visibleRule": "action = Create || action = Edit",
            "options": {
                "input": "Enter Release Note",
                "file": "Select Release Note File"
            }
        },
        {
            "name": "releaseNotesInput",
            "type": "multiLine",
            "label": "Release notes",
            "required": false,
            "helpMarkDown": "Release notes for this version.",
            "visibleRule": "releaseNotesSelection = input",
            "properties": {
                "resizable": "true",
                "rows": "4",
                "maxLength": "5000"
            }
        },
        {
            "name": "releaseNotesFile",
            "type": "filePath",
            "label": "Release notes file",
            "required": false,
            "helpMarkDown": "Select a file which contains the Release Notes for this version.",
            "visibleRule": "releaseNotesSelection = file"
        },
        {
            "name": "githubReleaseAsset",
            "type": "multiLine",
            "label": "File to upload as asset",
            "defaultValue": "$(Build.ArtifactStagingDirectory)/*",
            "required": false,
            "visibleRule": "action = Create || action = Edit",
            "helpMarkDown": "The file to upload as artifacts to the release. Eg- $(System.DefaultWorkingDirectory)/**/*.xml",
            "properties": {
                "resizable": "true",
                "rows": "4"
            }
        },
        {
            "name": "assetUploadMode",
            "type": "radio",
            "label": "Asset upload mode",
            "required": false,
            "defaultValue": "delete",
            "visibleRule": "action = Edit",
            "options": {
                "delete": "Delete exisiting assets",
                "replace": "Replace existing assets"
            }
        },
        {
            "name": "isDraft",
            "type": "boolean",
            "label": "Draft release",
            "defaultValue": "false",
            "required": true,
            "visibleRule": "action = Create || action = Edit",
            "helpMarkDown": "Is draft"
        },
        {
            "name": "isPrerelease",
            "type": "boolean",
            "label": "Pre release",
            "defaultValue": "false",
            "required": true,
            "visibleRule": "action = Create || action = Edit",
            "helpMarkDown": "Is pre release"
        }
    ],
    "sourceDefinitions": [
        {
            "target": "repositoryName",
            "endpoint": "/$(system.teamProject)/_apis/sourceProviders/GitHub/repositories?serviceEndpointId=$(githubEndpoint)",
            "selector": "jsonpath:$.repositories[*].id",
            "keySelector": "jsonpath:$.repositories[*].id",
            "authKey": "tfs:teamfoundation"
        }
    ],
    "instanceNameFormat": "$(action) GitHub Release",
    "execution": {
        "Node": {
            "target": "main.js"
        }
    },
    "messages": {
        "CreatingRelease": "Creating release",
        "CreateReleaseError": "An error occurred while creating release.",
        "CreateReleaseSuccess": "Release created successfully at %s",
        "DraftReleaseCreatedSuccess": "Draft release created successfully at %s",
        "DiscardingRelease": "Discarding release",
        "DiscardReleaseError": "An error occurred while discarding release.",
        "DiscardReleaseSuccess": "Discard release successful.",
        "EditingRelease": "Editing release",
        "EditReleaseError": "An error occurred while editing release.",
        "EditReleaseSuccess": "Release edited successfully",
        "GetReleasesError": "An error occurred while fetching releases",
        "GetTagsError": "An error occurred while fetching tags",
        "GetBranchError": "An error occurred while fetching branch",
        "MissingAssetError": "Missing asset: %s",
        "DuplicateAssetFound": "Duplicate asset found: %s",
        "NoReleaseFoundToDiscard": "No release found to discard for tag: %s",
        "MultipleReleasesFoundError": "More than 1 releases found for tag: %s",
        "DeletingDuplicateAsset": "Deleting duplicate asset: %s",
        "DuplicateAssetDeletedSuccessfully": "Duplicate asset deleted successfully: %s\n Uploading the asset again",
        "AssetDeletedSuccessfully": "Asset %s deleted successfully",
        "NoTagFound": "No tag found",
        "ErrorDeletingDuplicateAsset": "An error occurred while deleting duplicate asset: %s",
        "ErrorDeletingAsset": "An error occurred while deleting asset: %s",
        "UploadingAsset": "Uploading asset: %s",
        "UploadAssetError": "An error occurred while uploading asset: %s",
        "UploadAssetSuccess": "Uploaded asset: %s",
        "ReleaseNotesFileIsDirectoryError": "Release notes file: %s is a directory and not a file. Release notes will be set as empty.",
        "AssetIsDirectoryError": "Asset is a directory and not a file. Skipping uploading asset: %s",
        "GetLatestReleaseError": "Error fetching latest release",
        "GetCommitsListError": "Error fetching list of commits",
        "GetReposError": "Error fetching repos",
        "ReleaseAlreadyExists": "Failed to create release. Release already exist for tag: %s"
    }
}