{
    "id": "0F077E3A-AF59-496D-81BC-AD971B7464E0",
    "name": "XamariniOS",
    "friendlyName": "Xamarin.iOS",
    "description": "Build an iOS app with Xamarin on macOS",
    "helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613729)",
    "category": "Build",
    "visibility": [
        "Build"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 1,
        "Minor": 131,
        "Patch": 0
    },
    "demands": [
        "Xamarin.iOS"
    ],
    "groups": [
        {
            "name": "sign",
            "displayName": "Signing & Provisioning",
            "isExpanded": true
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "solution",
            "aliases": [ "solutionFile" ],
            "type": "filePath",
            "label": "Solution",
            "defaultValue": "**/*.sln",
            "required": true,
            "helpMarkDown": "Relative path from the repository root of the Xamarin.iOS solution to build. May contain wildcards."
        },
        {
            "name": "configuration",
            "type": "string",
            "label": "Configuration",
            "defaultValue": "Release",
            "required": true,
            "helpMarkDown": "Standard configurations are Ad-Hoc, AppStore, Debug, Release."
        },
        {
            "name": "clean",
            "type": "boolean",
            "label": "Clean",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Run a clean build (/t:clean) prior to the build."
        },
        {
            "name": "packageApp",
            "type": "boolean",
            "label": "Create app package",
            "defaultValue": true,
            "required": true,
            "helpMarkDown": "Indicates whether an IPA should be generated as a part of the build."
        },
        {
            "name": "forSimulator",
            "aliases": [ "buildForSimulator" ],
            "type": "boolean",
            "label": "Build for iOS Simulator",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Optionally build for the iOS Simulator instead of physical iOS devices."
        },
        {
            "name": "runNugetRestore",
            "type": "boolean",
            "label": "Run NuGet restore",
            "defaultValue": "true",
            "required": true,
            "helpMarkDown": "Optionally run `nuget restore` on the Xamarin iOS solution to install all referenced packages before build. The 'nuget' tool in the PATH of the build agent machine will be used. To use a different version of NuGet or set additional arguments, use the [NuGet Installer Task](https://www.visualstudio.com/docs/build/steps/package/nuget-installer).",
            "groupName": "advanced"
        },
        {
            "name": "args",
            "type": "string",
            "label": "Arguments",
            "required": false,
            "helpMarkDown": "Additional command line arguments that should be used to build.",
            "groupName": "advanced"
        },
        {
            "name": "cwd",
            "aliases": [ "workingDirectory" ],
            "type": "filePath",
            "label": "Working directory",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Working directory in which builds will run. When empty, the root of the repository is used.",
            "groupName": "advanced"
        },
        {
            "name": "buildTool",
            "aliases": [ "buildToolOption" ],
            "type": "radio",
            "label": "Build tool",
            "required": false,
            "groupName": "advanced",
            "defaultValue": "xbuild",
            "options": {
                "xbuild": "xbuild (Xamarin Studio)",
                "msbuild": "MSBuild (Visual Studio for Mac)"
            }
        },
        {
            "name": "mdtoolLocation",
            "aliases": [ "mdtoolFile" ],
            "type": "string",
            "label": "Build tool path",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Optionally supply the path to xbuild (the Xamarin Studio mono build tool) or MSBuild (the Visual Studio for Mac build tool). When empty, the default xbuild or MSBuild path is used.",
            "groupName": "advanced"
        },
        {
            "name": "signMethod",
            "aliases": [ "signingOption" ],
            "type": "radio",
            "label": "Override using",
            "required": false,
            "groupName": "sign",
            "defaultValue": "file",
            "helpMarkDown": "If the build should use a signing or provisioning method that is different than the default, choose that method here. Choose 'File Contents' to use a P12 certificate and provisioning profile. Choose 'Identifiers' to retrieve signing settings from the default Keychain and pre-installed profiles. Leave the corresponding fields blank if you do not wish to override default build settings.",
            "options": {
                "file": "File Contents",
                "id": "Identifiers"
            }
        },
        {
            "name": "iosSigningIdentity",
            "aliases": [ "signingIdentity" ],
            "type": "string",
            "label": "Signing identity",
            "required": false,
            "helpMarkDown": "Optionally override the signing identity that will be used to sign the build. If nothing is entered, the setting in the Xcode project will be used. You may need to select 'Unlock Default Keychain' if you use this option.",
            "groupName": "sign",
            "visibleRule": "signMethod = id"
        },
        {
            "name": "unlockDefaultKeychain",
            "aliases": [ "signingUnlockDefaultKeychain" ],
            "type": "boolean",
            "label": "Unlock default keychain",
            "defaultValue": false,
            "required": true,
            "helpMarkDown": "Resolve \"User interaction is not allowed\" errors by unlocking the default keychain.",
            "groupName": "sign",
            "visibleRule": "signMethod = id"
        },
        {
            "name": "defaultKeychainPassword",
            "aliases": [ "signingDefaultKeychainPassword" ],
            "type": "string",
            "label": "Default keychain password",
            "required": false,
            "helpMarkDown": "Password to unlock the default keychain when that option is set.",
            "groupName": "sign",
            "visibleRule": "signMethod = id"
        },
        {
            "name": "provProfileUuid",
            "aliases": [ "signingProvisioningProfileID" ],
            "type": "string",
            "label": "Provisioning profile UUID",
            "required": false,
            "helpMarkDown": "Optional UUID of an installed provisioning profile to be used for this build.",
            "groupName": "sign",
            "visibleRule": "signMethod = id"
        },
        {
            "name": "p12",
            "aliases": [ "signingP12File" ],
            "type": "filePath",
            "label": "P12 certificate file",
            "required": false,
            "helpMarkDown": "Optional relative path to a PKCS12-formatted P12 certificate file containing a signing certificate to be used for this build.",
            "groupName": "sign",
            "visibleRule": "signMethod = file"
        },
        {
            "name": "p12pwd",
            "aliases": [ "signingP12Password" ],
            "type": "string",
            "label": "P12 password",
            "required": false,
            "helpMarkDown": "Password to the P12 certificate file, if specified. Use a build variable to encrypt this value.",
            "groupName": "sign",
            "visibleRule": "signMethod = file"
        },
        {
            "name": "provProfile",
            "aliases": [ "signingProvisioningProfileFile" ],
            "type": "filePath",
            "label": "Provisioning profile file",
            "required": false,
            "helpMarkDown": "Optional relative path to a file containing the provisioning profile override to be used for this build.",
            "groupName": "sign",
            "visibleRule": "signMethod = file"
        },
        {
            "name": "removeProfile",
            "aliases": [ "signingRemoveProfile" ],
            "type": "boolean",
            "label": "Remove profile after build",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Specifies that the contents of the provisioning profile file should be removed from the build agent after the build is complete. **Only enable this if you are running one agent per user.**",
            "groupName": "sign",
            "visibleRule": "signMethod = file"
        }
    ],
    "instanceNameFormat": "Build Xamarin.iOS solution $(solution)",
    "execution": {
        "Node": {
            "target": "xamarinios.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "SignIdNotFound": "Failed to find iOS signing identity. Verify the signing and provisioning information provided.",
        "TempKeychainSetupFailed": "Failed to add the temporary keychain to the keychains search path.",
        "ProvProfileDetailsNotFound": "Failed to find the details for provisioning profile: %s",
        "ProvProfileUUIDNotFound": "Failed to find provisioning profile UUID for provisioning profile: %s",
        "TempKeychainDeleteFailed": "Failed to delete temporary keychain %s created during the build.",
        "ProvProfileDeleteFailed": "Failed to delete the provisioning profile %s.",
        "XamariniOSSucceeded": "Xamarin.iOS task execution completed with no errors.",
        "XamariniOSFailed": "Xamarin.iOS task failed with error %s. For guidance on setting up the build definition, see https://go.microsoft.com/fwlink/?LinkId=760847.",
        "MSB_Build0" : "Build {0}",
        "MSB_DetectedNuGetExtensionsLoaderPath0": "Detected NuGet extensions loader path. Environment variable NUGET_EXTENSIONS_PATH is set to '{0}'.",
        "MSB_SolutionNotFoundUsingSearchPattern0": "Solution not found using search pattern '{0}'.",
        "MSB_RestoreNuGetPackagesDeprecated": "The 'Restore NuGet Packages' option is deprecated. To restore NuGet packages in your build, add a NuGet Installer task to your build definition.",
        "MSB_BuildToolNotFound": "MSBuild or xbuild (Mono) were not found on the macOS or Linux agent.",
        "MultipleSolutionsFound": "Multiple solution file matches were found. The first match will be used: %s",
        "SolutionDoesNotExist": "The solution file was specified, but it does not exist: %s"
    }
}